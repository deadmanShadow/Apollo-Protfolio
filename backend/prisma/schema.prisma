// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider      = "prisma-zod-generator"
  output        = "prisma/zod"
  emitManifest  = true
}

model User {
  id        Int              @id @default(autoincrement())
  name      String
  email     String           @unique
  picture   String?
  password  String
  phone     String?
  bio       String?
  skills    String[]
  createdAt DateTime         @default(now())
  updatedAt DateTime

  blogs           Blog[]
  projects        Project[]
  workExperiences WorkExperience[]
}

model Blog {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  view      Int      @default(0)
  published Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
  userId    Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Project {
  id          Int      @id @default(autoincrement())
  title       String
  thumbnail   String?
  projectLink String
  liveSite    String?
  description String
  features    String
  userId      Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model WorkExperience {
  id        Int      @id @default(autoincrement())
  company   String
  position  String
  startDate DateTime
  endDate   DateTime?
  userId    Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
